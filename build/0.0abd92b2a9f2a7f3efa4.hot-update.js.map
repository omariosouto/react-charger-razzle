{"version":3,"file":"0.0abd92b2a9f2a7f3efa4.hot-update.js","sources":["webpack:///src/server/ssr-helpers.js"],"sourcesContent":["import Routes from '../routes'\nimport { matchPath } from 'react-router-dom'\n\n\nexport function extractActiveRouteInfoFromRoutes(url, router) {\n  const routesArray = Routes().props.children.map( route => route )\n  const activeRoute = routesArray.find((route, index) => {\n    const routeInfoOnly = { path: route.props.path, exact: route.props.exact }\n    if(matchPath(url, routeInfoOnly)) {\n      return true\n    }\n    return false\n  })\n  \n  console.log('Bateu!', activeRoute.props)\n  let activeRouteInfo = {\n    route: activeRoute, \n    params: matchPath(url, { path: activeRoute.props.path, exact: activeRoute.props.exact }).params\n  }\n\n  if(!activeRouteInfo.route) { // Set 404 Route\n    activeRouteInfo = {\n      route: routesArray.find( route => {\n      return route.props.path.match(/\\*/) ? route : false\n         }),\n      }\n  }\n\n  return activeRouteInfo\n}\n\n\nexport function doRedirect(activeRoute, redirect) {\n  if(activeRoute.props.render().props.to) {\n      redirect(activeRoute.props.render().props.to)\n  }\n}\n\nexport function getCurrentComponent({ component }) {\n\n  if(component.preload) { // Load Async\n    return component.preload()\n                    .then((component) => {\n                      return component.default\n                    })\n  } else {\n    return new Promise((resolve) => { // Load Sync\n      resolve(component)\n    })\n  }\n}\n\nexport async function extractInitialData(component, request) {\n  let initialData = {};\n  // console.log('extractInitialData', component)\n  if(component.getInitialData) {\n    initialData = await component.getInitialData(request)\n  }\n\n  return {\n    component,\n    initialData\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/server/ssr-helpers.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}